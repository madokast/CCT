package cn.edu.hust.zrx.cct.study.旧机架研究.超导机架AGCCT单独建模;

import cn.edu.hust.zrx.cct.Logger;
import cn.edu.hust.zrx.cct.advanced.COSY;
import cn.edu.hust.zrx.cct.advanced.CosyArbitraryOrder;
import cn.edu.hust.zrx.cct.base.BaseUtils;
import cn.edu.hust.zrx.cct.base.line.Trajectory;
import cn.edu.hust.zrx.cct.base.line.TrajectoryFactory;
import cn.edu.hust.zrx.cct.base.particle.*;
import cn.edu.hust.zrx.cct.base.point.Point2;
import cn.edu.hust.zrx.cct.base.python.Plot2d;
import cn.edu.hust.zrx.cct.base.opticsMagnet.qs.QsHardPlaneMagnet;
import cn.edu.hust.zrx.cct.base.vector.Vector2;

import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;
import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.util.Arrays;
import java.util.List;

/**
 * Description
 * C20200406重新测试QS磁铁六极场问题
 * <p>
 * Data
 * 23:11
 *
 * @author zrx
 * @version 1.0
 */
@SuppressWarnings("all")
public class C20200406重新测试QS磁铁六极场问题 {

    @run(1)
    public void 对比() {
        boolean xPlane = false;
        double delta = 0.;
        int number = 640;
        QsHardPlaneMagnet qsHardPlaneMagnet = QsHardPlaneMagnet.create(0.2, 0, 10000, 30,
                Point2.origin(), Vector2.yDirect());

        Trajectory trajectory = TrajectoryFactory.setStartingPoint(0, -0.5).setStraightLine(1.2, Vector2.yDirect());

        RunningParticle rp = ParticleFactory.createIdealProtonAtTrajectory250MeV(trajectory);
        RunningParticle rp1 = ParticleFactory.createIdealProtonAtTrajectory250MeV(trajectory, trajectory.getLength());
        List<RunningParticle> pp = ParticleFactory.createParticlesFromPhaseSpaceParticle(rp, rp.computeNaturalCoordinateSystem(), getPPs(xPlane, delta, 32));

        ParticleRunner.run(rp, qsHardPlaneMagnet, trajectory.getLength(), MM);
        ParticleRunner.runThread(pp, qsHardPlaneMagnet, trajectory.getLength(), MM);

        List<PhaseSpaceParticle> phaseSpaceParticles = PhaseSpaceParticles.phaseSpaceParticlesFromRunningParticles(rp, rp.computeNaturalCoordinateSystem(), pp);

        List<Point2> list = PhaseSpaceParticles.projectionToPlane(xPlane, phaseSpaceParticles);

        list = Point2.convert(list, 1 / MM, 1 / MRAD);



        List<Point2> first = PhaseSpaceParticles.projectionToPlane(xPlane,
                CosyArbitraryOrder.readMap(map1st()).apply(getPPs(xPlane, delta, number)));
        first = Point2.convert(first, 1 / MM, 1 / MRAD);

        List<Point2> second = PhaseSpaceParticles.projectionToPlane(xPlane,
                CosyArbitraryOrder.readMap(map2nd()).apply(getPPs(xPlane, delta, number)));
        second = Point2.convert(second, 1 / MM, 1 / MRAD);

        List<Point2> third = PhaseSpaceParticles.projectionToPlane(xPlane,
                CosyArbitraryOrder.readMap(map3rd()).apply(getPPs(xPlane, delta, number)));
        third = Point2.convert(third, 1 / MM, 1 / MRAD);

        List<Point2> forth = PhaseSpaceParticles.projectionToPlane(xPlane,
                CosyArbitraryOrder.readMap(map4th()).apply(getPPs(xPlane, delta, number)));
        forth = Point2.convert(forth, 1 / MM, 1 / MRAD);



        Plot2d.plot2circle(first, Plot2d.RED_LINE);
        Plot2d.plot2circle(second, Plot2d.YELLOW_DASH);
        Plot2d.plot2circle(third, Plot2d.BLUE_LINE);
        Plot2d.plot2circle(forth, Plot2d.PINK_DASH);

        Plot2d.plot2circle(list, Plot2d.BLACK_POINT);

        if (xPlane) {
            Plot2d.info("x/mm", "xp/mrad", "x/xp plane", 18);
        } else {
            Plot2d.info("y/mm", "yp/mrad", "y/yp plane", 18);
        }
        Plot2d.legend(18,  "COSY-1st", "COSY-2nd", "COSY-3rd", "COSY-4th","Tracking");

        Plot2d.equal();

        Plot2d.showThread();

    }


    @run(value = -1000, code = "啊那是真的完美")
    public void 两种COSY计算方法正确性验证() {
        boolean xPlane = true;
        double delta = 0.;
        int number = 64;

        List<PhaseSpaceParticle> oldCosy = COSY.importMatrix(map2nd()).apply(getPPs(xPlane, delta, number));

        List<PhaseSpaceParticle> newCosy = CosyArbitraryOrder.readMap(map3rd()).apply(getPPs(xPlane, delta, number));

        List<Point2> oldP = PhaseSpaceParticles.projectionToPlane(xPlane, oldCosy);
        List<Point2> newP = PhaseSpaceParticles.projectionToPlane(xPlane, newCosy);


        Plot2d.plot2circle(oldP, Plot2d.BLACK_LINE);
        Plot2d.plot2circle(newP, Plot2d.YELLOW_LINE);

        Plot2d.equal();

        Plot2d.showThread();

    }

    private List<PhaseSpaceParticle> getPPs(boolean xPlane, double delta, int number) {
        return PhaseSpaceParticles.phaseSpaceParticlesAlongPositiveEllipseInPlane(
                xPlane, 3.5 * MM, 7.2 * MM, delta, number);
    }

    // -----------------cosy map ---------------------
    private String map1st() {
        return "   1.000000     0.0000000E+00 0.0000000E+00 0.0000000E+00 0.0000000E+00 100000\n" +
                "   1.200000      1.000000     0.0000000E+00 0.0000000E+00 0.0000000E+00 010000\n" +
                "  0.0000000E+00 0.0000000E+00  1.000000     0.0000000E+00 0.0000000E+00 001000\n" +
                "  0.0000000E+00 0.0000000E+00  1.200000      1.000000     0.0000000E+00 000100\n" +
                "  0.0000000E+00 0.0000000E+00 0.0000000E+00 0.0000000E+00  1.000000     000010\n" +
                "  0.0000000E+00 0.0000000E+00 0.0000000E+00 0.0000000E+00 0.2336092     000001";
    }

    private String map2nd() {
        return "   1.000000     0.0000000E+00 0.0000000E+00 0.0000000E+00 0.0000000E+00 100000\n" +
                "   1.200000      1.000000     0.0000000E+00 0.0000000E+00 0.0000000E+00 010000\n" +
                "  0.0000000E+00 0.0000000E+00  1.000000     0.0000000E+00 0.0000000E+00 001000\n" +
                "  0.0000000E+00 0.0000000E+00  1.200000      1.000000     0.0000000E+00 000100\n" +
                "  0.0000000E+00 0.0000000E+00 0.0000000E+00 0.0000000E+00  1.000000     000010\n" +
                "  0.0000000E+00 0.0000000E+00 0.0000000E+00 0.0000000E+00 0.2336092     000001\n" +
                "  -493.3950     -822.3250     0.0000000E+00 0.0000000E+00 0.0000000E+00 200000\n" +
                "  -586.5919     -986.7900     0.0000000E+00 0.0000000E+00 0.0000000E+00 110000\n" +
                "  -175.9776     -298.7781     0.0000000E+00 0.0000000E+00-0.3352685     020000\n" +
                "  0.0000000E+00 0.0000000E+00  986.7900      1644.650     0.0000000E+00 101000\n" +
                "  0.0000000E+00 0.0000000E+00  586.5919      986.7900     0.0000000E+00 011000\n" +
                "   493.3950      822.3250     0.0000000E+00 0.0000000E+00 0.0000000E+00 002000\n" +
                "  0.0000000E+00 0.0000000E+00  586.5919      986.7900     0.0000000E+00 100100\n" +
                "  0.0000000E+00 0.0000000E+00  351.9551      597.5562     0.0000000E+00 010100\n" +
                "   586.5919      986.7900     0.0000000E+00 0.0000000E+00 0.0000000E+00 001100\n" +
                " -0.6705370     0.0000000E+00 0.0000000E+00 0.0000000E+00 0.0000000E+00 010001\n" +
                "   175.9776      298.7781     0.0000000E+00 0.0000000E+00-0.3352685     000200\n" +
                "  0.0000000E+00 0.0000000E+00-0.6705370     0.0000000E+00 0.0000000E+00 000101\n" +
                "  0.0000000E+00 0.0000000E+00 0.0000000E+00 0.0000000E+00-0.1958045     000002";
    }

    private String map3rd() {
        return "   1.000000     0.0000000E+00 0.0000000E+00 0.0000000E+00 0.0000000E+00 100000\n" +
                "   1.200000      1.000000     0.0000000E+00 0.0000000E+00 0.0000000E+00 010000\n" +
                "  0.0000000E+00 0.0000000E+00  1.000000     0.0000000E+00 0.0000000E+00 001000\n" +
                "  0.0000000E+00 0.0000000E+00  1.200000      1.000000     0.0000000E+00 000100\n" +
                "  0.0000000E+00 0.0000000E+00 0.0000000E+00 0.0000000E+00  1.000000     000010\n" +
                "  0.0000000E+00 0.0000000E+00 0.0000000E+00 0.0000000E+00 0.2336092     000001\n" +
                "  -493.3950     -822.3250     0.0000000E+00 0.0000000E+00 0.0000000E+00 200000\n" +
                "  -586.5919     -986.7900     0.0000000E+00 0.0000000E+00 0.0000000E+00 110000\n" +
                "  -175.9776     -298.7781     0.0000000E+00 0.0000000E+00-0.3352685     020000\n" +
                "  0.0000000E+00 0.0000000E+00  986.7900      1644.650     0.0000000E+00 101000\n" +
                "  0.0000000E+00 0.0000000E+00  586.5919      986.7900     0.0000000E+00 011000\n" +
                "   493.3950      822.3250     0.0000000E+00 0.0000000E+00 0.0000000E+00 002000\n" +
                "  0.0000000E+00 0.0000000E+00  586.5919      986.7900     0.0000000E+00 100100\n" +
                "  0.0000000E+00 0.0000000E+00  351.9551      597.5562     0.0000000E+00 010100\n" +
                "   586.5919      986.7900     0.0000000E+00 0.0000000E+00 0.0000000E+00 001100\n" +
                " -0.6705370     0.0000000E+00 0.0000000E+00 0.0000000E+00 0.0000000E+00 010001\n" +
                "   175.9776      298.7781     0.0000000E+00 0.0000000E+00-0.3352685     000200\n" +
                "  0.0000000E+00 0.0000000E+00-0.6705370     0.0000000E+00 0.0000000E+00 000101\n" +
                "  0.0000000E+00 0.0000000E+00 0.0000000E+00 0.0000000E+00-0.1958045     000002\n" +
                "   24794.68      45081.23     0.0000000E+00 0.0000000E+00 0.0000000E+00 300000\n" +
                "   43277.98      78892.15     0.0000000E+00 0.0000000E+00  275.6997     210000\n" +
                "   25162.84      45982.85     0.0000000E+00 0.0000000E+00  327.7763     120000\n" +
                "   4877.745      8933.597     0.0000000E+00 0.0000000E+00  98.33288     030000\n" +
                "  0.0000000E+00 0.0000000E+00  24794.68      45081.23     0.0000000E+00 201000\n" +
                "  0.0000000E+00 0.0000000E+00  32097.84      58605.60     0.0000000E+00 111000\n" +
                "  0.0000000E+00 0.0000000E+00  10138.77      18573.47     0.0000000E+00 021000\n" +
                "   24794.68      45081.23     0.0000000E+00 0.0000000E+00 0.0000000E+00 102000\n" +
                "   11180.15      20286.55     0.0000000E+00 0.0000000E+00 -275.6997     012000\n" +
                "  0.0000000E+00 0.0000000E+00  24794.68      45081.23     0.0000000E+00 003000\n" +
                "  0.0000000E+00 0.0000000E+00  11180.15      20286.55     0.0000000E+00 200100\n" +
                "  0.0000000E+00 0.0000000E+00  15024.07      27409.39     0.0000000E+00 110100\n" +
                "  0.0000000E+00 0.0000000E+00  4877.745      8933.597     0.0000000E+00 020100\n" +
                "   32097.84      58605.60     0.0000000E+00 0.0000000E+00 -551.3993     101100\n" +
                "   15024.07      27409.39     0.0000000E+00 0.0000000E+00 -655.5526     011100\n" +
                "  0.0000000E+00 0.0000000E+00  43277.98      78892.15     0.0000000E+00 002100\n" +
                "   275.6997     0.0000000E+00 0.0000000E+00 0.0000000E+00 0.0000000E+00 200001\n" +
                "   655.5526      551.3993     0.0000000E+00 0.0000000E+00 0.0000000E+00 110001\n" +
                "   294.9986      333.9029     0.0000000E+00 0.0000000E+00 0.4914878     020001\n" +
                "  0.0000000E+00 0.0000000E+00 -551.3993     0.0000000E+00 0.0000000E+00 101001\n" +
                "  0.0000000E+00 0.0000000E+00 -655.5526     -551.3993     0.0000000E+00 011001\n" +
                "  -275.6997     0.0000000E+00 0.0000000E+00 0.0000000E+00 0.0000000E+00 002001\n" +
                "   10138.77      18573.47     0.0000000E+00 0.0000000E+00 -327.7763     100200\n" +
                "   4877.745      8933.597     0.0000000E+00 0.0000000E+00 -294.9986     010200\n" +
                "  0.0000000E+00 0.0000000E+00  25162.84      45982.85     0.0000000E+00 001200\n" +
                "  0.0000000E+00 0.0000000E+00 -655.5526     -551.3993     0.0000000E+00 100101\n" +
                "  0.0000000E+00 0.0000000E+00 -589.9973     -667.8059     0.0000000E+00 010101\n" +
                "  -655.5526     -551.3993     0.0000000E+00 0.0000000E+00 0.0000000E+00 001101\n" +
                "  0.4914878     0.0000000E+00 0.0000000E+00 0.0000000E+00 0.0000000E+00 010002\n" +
                "  0.0000000E+00 0.0000000E+00  4877.745      8933.597     0.0000000E+00 000300\n" +
                "  -294.9986     -333.9029     0.0000000E+00 0.0000000E+00 0.4914878     000201\n" +
                "  0.0000000E+00 0.0000000E+00 0.4914878     0.0000000E+00 0.0000000E+00 000102\n" +
                "  0.0000000E+00 0.0000000E+00 0.0000000E+00 0.0000000E+00 0.1686213     000003";
    }

    private String map4th() {
        return "   1.000000     0.0000000E+00 0.0000000E+00 0.0000000E+00 0.0000000E+00 100000\n" +
                "   1.200000      1.000000     0.0000000E+00 0.0000000E+00 0.0000000E+00 010000\n" +
                "  0.0000000E+00 0.0000000E+00  1.000000     0.0000000E+00 0.0000000E+00 001000\n" +
                "  0.0000000E+00 0.0000000E+00  1.200000      1.000000     0.0000000E+00 000100\n" +
                "  0.0000000E+00 0.0000000E+00 0.0000000E+00 0.0000000E+00  1.000000     000010\n" +
                "  0.0000000E+00 0.0000000E+00 0.0000000E+00 0.0000000E+00 0.2336092     000001\n" +
                "  -493.3950     -822.3250     0.0000000E+00 0.0000000E+00 0.0000000E+00 200000\n" +
                "  -586.5919     -986.7900     0.0000000E+00 0.0000000E+00 0.0000000E+00 110000\n" +
                "  -175.9776     -298.7781     0.0000000E+00 0.0000000E+00-0.3352685     020000\n" +
                "  0.0000000E+00 0.0000000E+00  986.7900      1644.650     0.0000000E+00 101000\n" +
                "  0.0000000E+00 0.0000000E+00  586.5919      986.7900     0.0000000E+00 011000\n" +
                "   493.3950      822.3250     0.0000000E+00 0.0000000E+00 0.0000000E+00 002000\n" +
                "  0.0000000E+00 0.0000000E+00  586.5919      986.7900     0.0000000E+00 100100\n" +
                "  0.0000000E+00 0.0000000E+00  351.9551      597.5562     0.0000000E+00 010100\n" +
                "   586.5919      986.7900     0.0000000E+00 0.0000000E+00 0.0000000E+00 001100\n" +
                " -0.6705370     0.0000000E+00 0.0000000E+00 0.0000000E+00 0.0000000E+00 010001\n" +
                "   175.9776      298.7781     0.0000000E+00 0.0000000E+00-0.3352685     000200\n" +
                "  0.0000000E+00 0.0000000E+00-0.6705370     0.0000000E+00 0.0000000E+00 000101\n" +
                "  0.0000000E+00 0.0000000E+00 0.0000000E+00 0.0000000E+00-0.1958045     000002\n" +
                "   24794.68      45081.23     0.0000000E+00 0.0000000E+00 0.0000000E+00 300000\n" +
                "   43277.98      78892.15     0.0000000E+00 0.0000000E+00  275.6997     210000\n" +
                "   25162.84      45982.85     0.0000000E+00 0.0000000E+00  327.7763     120000\n" +
                "   4877.745      8933.597     0.0000000E+00 0.0000000E+00  98.33288     030000\n" +
                "  0.0000000E+00 0.0000000E+00  24794.68      45081.23     0.0000000E+00 201000\n" +
                "  0.0000000E+00 0.0000000E+00  32097.84      58605.60     0.0000000E+00 111000\n" +
                "  0.0000000E+00 0.0000000E+00  10138.77      18573.47     0.0000000E+00 021000\n" +
                "   24794.68      45081.23     0.0000000E+00 0.0000000E+00 0.0000000E+00 102000\n" +
                "   11180.15      20286.55     0.0000000E+00 0.0000000E+00 -275.6997     012000\n" +
                "  0.0000000E+00 0.0000000E+00  24794.68      45081.23     0.0000000E+00 003000\n" +
                "  0.0000000E+00 0.0000000E+00  11180.15      20286.55     0.0000000E+00 200100\n" +
                "  0.0000000E+00 0.0000000E+00  15024.07      27409.39     0.0000000E+00 110100\n" +
                "  0.0000000E+00 0.0000000E+00  4877.745      8933.597     0.0000000E+00 020100\n" +
                "   32097.84      58605.60     0.0000000E+00 0.0000000E+00 -551.3993     101100\n" +
                "   15024.07      27409.39     0.0000000E+00 0.0000000E+00 -655.5526     011100\n" +
                "  0.0000000E+00 0.0000000E+00  43277.98      78892.15     0.0000000E+00 002100\n" +
                "   275.6997     0.0000000E+00 0.0000000E+00 0.0000000E+00 0.0000000E+00 200001\n" +
                "   655.5526      551.3993     0.0000000E+00 0.0000000E+00 0.0000000E+00 110001\n" +
                "   294.9986      333.9029     0.0000000E+00 0.0000000E+00 0.4914878     020001\n" +
                "  0.0000000E+00 0.0000000E+00 -551.3993     0.0000000E+00 0.0000000E+00 101001\n" +
                "  0.0000000E+00 0.0000000E+00 -655.5526     -551.3993     0.0000000E+00 011001\n" +
                "  -275.6997     0.0000000E+00 0.0000000E+00 0.0000000E+00 0.0000000E+00 002001\n" +
                "   10138.77      18573.47     0.0000000E+00 0.0000000E+00 -327.7763     100200\n" +
                "   4877.745      8933.597     0.0000000E+00 0.0000000E+00 -294.9986     010200\n" +
                "  0.0000000E+00 0.0000000E+00  25162.84      45982.85     0.0000000E+00 001200\n" +
                "  0.0000000E+00 0.0000000E+00 -655.5526     -551.3993     0.0000000E+00 100101\n" +
                "  0.0000000E+00 0.0000000E+00 -589.9973     -667.8059     0.0000000E+00 010101\n" +
                "  -655.5526     -551.3993     0.0000000E+00 0.0000000E+00 0.0000000E+00 001101\n" +
                "  0.4914878     0.0000000E+00 0.0000000E+00 0.0000000E+00 0.0000000E+00 010002\n" +
                "  0.0000000E+00 0.0000000E+00  4877.745      8933.597     0.0000000E+00 000300\n" +
                "  -294.9986     -333.9029     0.0000000E+00 0.0000000E+00 0.4914878     000201\n" +
                "  0.0000000E+00 0.0000000E+00 0.4914878     0.0000000E+00 0.0000000E+00 000102\n" +
                "  0.0000000E+00 0.0000000E+00 0.0000000E+00 0.0000000E+00 0.1686213     000003\n" +
                "  -988571.3     -1853571.     0.0000000E+00 0.0000000E+00 -107059.7     400000\n" +
                "  -2238408.     -4201428.     0.0000000E+00 0.0000000E+00 -269538.6     310000\n" +
                "  -1903299.     -3574744.     0.0000000E+00 0.0000000E+00 -253920.5     220000\n" +
                "  -720594.2     -1353600.     0.0000000E+00 0.0000000E+00 -106102.5     130000\n" +
                "  -102556.7     -192555.3     0.0000000E+00 0.0000000E+00 -16599.10     040000\n" +
                "  0.0000000E+00 0.0000000E+00 -1581714.     -2965714.     0.0000000E+00 301000\n" +
                "  0.0000000E+00 0.0000000E+00 -2555457.     -4794571.     0.0000000E+00 211000\n" +
                "  0.0000000E+00 0.0000000E+00 -1375351.     -2582996.     0.0000000E+00 121000\n" +
                "  0.0000000E+00 0.0000000E+00 -246351.5     -463393.7     0.0000000E+00 031000\n" +
                "   3558857.      6672856.     0.0000000E+00 0.0000000E+00 -214119.5     202000\n" +
                "   3976881.      7463713.     0.0000000E+00 0.0000000E+00 -269538.6     112000\n" +
                "   1116890.      2096830.     0.0000000E+00 0.0000000E+00 -81919.59     022000\n" +
                "  0.0000000E+00 0.0000000E+00  3163428.      5931428.     0.0000000E+00 103000\n" +
                "  0.0000000E+00 0.0000000E+00  1764600.      3311714.     0.0000000E+00 013000\n" +
                "  -197714.3     -370714.2     0.0000000E+00 0.0000000E+00 -107059.7     004000\n" +
                "  0.0000000E+00 0.0000000E+00 -869236.6     -1631143.     0.0000000E+00 300100\n" +
                "  0.0000000E+00 0.0000000E+00 -1411361.     -2649371.     0.0000000E+00 210100\n" +
                "  0.0000000E+00 0.0000000E+00 -763217.1     -1433676.     0.0000000E+00 120100\n" +
                "  0.0000000E+00 0.0000000E+00 -137301.7     -258243.4     0.0000000E+00 030100\n" +
                "   3924628.      7364856.     0.0000000E+00 0.0000000E+00 -269538.6     201100\n" +
                "   4395539.      8254570.     0.0000000E+00 0.0000000E+00 -344001.8     111100\n" +
                "   1237460.      2323883.     0.0000000E+00 0.0000000E+00 -106102.5     021100\n" +
                "  0.0000000E+00 0.0000000E+00  5346052.     0.1003400E+08 0.0000000E+00 102100\n" +
                "  0.0000000E+00 0.0000000E+00  2984178.      5605199.     0.0000000E+00 012100\n" +
                "  -395428.5     -741428.5     0.0000000E+00 0.0000000E+00 -269538.6     003100\n" +
                "  -27709.58     -25190.53     0.0000000E+00 0.0000000E+00 0.0000000E+00 300001\n" +
                "  -72548.72     -88166.84     0.0000000E+00 0.0000000E+00 -404.1627     210001\n" +
                "  -56242.05     -77083.01     0.0000000E+00 0.0000000E+00 -663.6597     120001\n" +
                "  -13627.28     -19967.69     0.0000000E+00 0.0000000E+00 -254.0444     030001\n" +
                "  0.0000000E+00 0.0000000E+00 -27709.58     -25190.53     0.0000000E+00 201001\n" +
                "  0.0000000E+00 0.0000000E+00 -53806.96     -65495.37     0.0000000E+00 111001\n" +
                "  0.0000000E+00 0.0000000E+00 -22661.40     -31135.49     0.0000000E+00 021001\n" +
                "  -27709.58     -25190.53     0.0000000E+00 0.0000000E+00 0.0000000E+00 102001\n" +
                "  -18741.75     -22671.47     0.0000000E+00 0.0000000E+00  404.1627     012001\n" +
                "  0.0000000E+00 0.0000000E+00 -27709.58     -25190.53     0.0000000E+00 003001\n" +
                "   1080880.      2030455.     0.0000000E+00 0.0000000E+00 -81919.59     200200\n" +
                "   1213297.      2280388.     0.0000000E+00 0.0000000E+00 -106102.5     110200\n" +
                "   342415.1      643354.0     0.0000000E+00 0.0000000E+00 -33198.20     020200\n" +
                "  0.0000000E+00 0.0000000E+00  3020189.      5671575.     0.0000000E+00 101200\n" +
                "  0.0000000E+00 0.0000000E+00  1687540.      3170594.     0.0000000E+00 011200\n" +
                "  -294471.1     -552540.7     0.0000000E+00 0.0000000E+00 -253920.5     002200\n" +
                "  0.0000000E+00 0.0000000E+00 -18741.75     -22671.47     0.0000000E+00 200101\n" +
                "  0.0000000E+00 0.0000000E+00 -33580.65     -45947.52     0.0000000E+00 110101\n" +
                "  0.0000000E+00 0.0000000E+00 -13627.28     -19967.69     0.0000000E+00 020101\n" +
                "  -53806.96     -65495.37     0.0000000E+00 0.0000000E+00  808.3255     101101\n" +
                "  -33580.65     -45947.52     0.0000000E+00 0.0000000E+00  1327.319     011101\n" +
                "  0.0000000E+00 0.0000000E+00 -72548.72     -88166.84     0.0000000E+00 002101\n" +
                "  -202.0814     0.0000000E+00 0.0000000E+00 0.0000000E+00 0.0000000E+00 200002\n" +
                "  -663.6597     -404.1627     0.0000000E+00 0.0000000E+00 0.0000000E+00 110002\n" +
                "  -381.0667     -338.0323     0.0000000E+00 0.0000000E+00-0.6077555     020002\n" +
                "  0.0000000E+00 0.0000000E+00  404.1627     0.0000000E+00 0.0000000E+00 101002\n" +
                "  0.0000000E+00 0.0000000E+00  663.6597      404.1627     0.0000000E+00 011002\n" +
                "   202.0814     0.0000000E+00 0.0000000E+00 0.0000000E+00 0.0000000E+00 002002\n" +
                "  0.0000000E+00 0.0000000E+00  570567.5      1071363.     0.0000000E+00 100300\n" +
                "  0.0000000E+00 0.0000000E+00  319251.8      599561.9     0.0000000E+00 010300\n" +
                "  -96324.78     -181156.6     0.0000000E+00 0.0000000E+00 -106102.5     001300\n" +
                "  -22661.40     -31135.49     0.0000000E+00 0.0000000E+00  663.6597     100201\n" +
                "  -13627.28     -19967.69     0.0000000E+00 0.0000000E+00  762.1333     010201\n" +
                "  0.0000000E+00 0.0000000E+00 -56242.05     -77083.01     0.0000000E+00 001201\n" +
                "  0.0000000E+00 0.0000000E+00  663.6597      404.1627     0.0000000E+00 100102\n" +
                "  0.0000000E+00 0.0000000E+00  762.1333      676.0645     0.0000000E+00 010102\n" +
                "   663.6597      404.1627     0.0000000E+00 0.0000000E+00 0.0000000E+00 001102\n" +
                " -0.4051703     0.0000000E+00 0.0000000E+00 0.0000000E+00 0.0000000E+00 010003\n" +
                "  -11581.65     -21896.02     0.0000000E+00 0.0000000E+00 -16599.10     000400\n" +
                "  0.0000000E+00 0.0000000E+00 -13627.28     -19967.69     0.0000000E+00 000301\n" +
                "   381.0667      338.0323     0.0000000E+00 0.0000000E+00-0.6077555     000202\n" +
                "  0.0000000E+00 0.0000000E+00-0.4051703     0.0000000E+00 0.0000000E+00 000103\n" +
                "  0.0000000E+00 0.0000000E+00 0.0000000E+00 0.0000000E+00-0.1495430     000004";
    }


    /*-----------------辅助量----------------------*/
    final static double MM = 1e-3;
    final static double MRAD = 1e-3; // m rad
    final static double kA = 1e3;
    final static double PRESENT = 0.01; // %

    public static void main(String[] args) throws Exception {
        BaseUtils.Timer.printPeriodPerSecondCall(Logger.getLogger());
        StackTraceElement stackTraceElement = Thread.currentThread().getStackTrace()[1];
        Logger.getLogger().info("{}", stackTraceElement.getClassName());
        Class<?> currentClass = Class.forName(stackTraceElement.getClassName());

        Constructor<?> constructor = currentClass.getConstructor();
        Object newInstance = constructor.newInstance();

        Class<run> runAnnotation = run.class;

        Method[] methods = currentClass.getMethods();
        Arrays.stream(methods)
                .filter(method -> method.isAnnotationPresent(runAnnotation))
                .sorted((m1, m2) -> Integer.compare(
                        m2.getAnnotation(runAnnotation).value(),
                        m1.getAnnotation(runAnnotation).value()
                ))
                .limit(1)
                .forEach(method -> {
                    Logger.getLogger().info("运行{}", method.toString());
                    try {
                        method.invoke(newInstance);
                    } catch (IllegalAccessException | InvocationTargetException e) {
                        e.printStackTrace();
                    }
                });

        BaseUtils.Timer.printPeriodPerSecondCall(Logger.getLogger());
    }

    @Retention(RetentionPolicy.RUNTIME)
    @Target(ElementType.METHOD)
    private @interface run {
        int value() default 0;

        String code() default "";
    }
}
